{"ast":null,"code":"var _jsxFileName = \"/home/maxsteel/Developer/weather-app/src/Weather.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = _ref => {\n  _s();\n  let {\n    latitude,\n    longitude\n  } = _ref;\n  const [cityName, setCityName] = useState('');\n  const [weather, setWeather] = useState('');\n  // const [latitude ] = useState(latitude);\n  // const [longitude] = useState(longitude);\n  useEffect(() => {\n    fetchWeatherData(latitude, longitude);\n  }, [latitude, longitude]);\n  const fetchWeatherData = async (latitude, longitude) => {\n    try {\n      const apiUrl = `https://api.weather.gov/points/${latitude},${longitude}`;\n      const response = await axios.get(apiUrl).catch(function (error) {\n        if (error.response) {\n          console.log('invalid Input');\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        }\n        ;\n      });\n      const city = response.data.properties.relativeLocation.properties.city;\n      const forecast = response.data.properties.forecast;\n      setCityName(city);\n      fetchForecastData(forecast);\n    } catch (error) {\n      console.error(`Error fetching weather data: ${error}`);\n    }\n  };\n  const fetchForecastData = async forecastUrl => {\n    try {\n      const response = await axios.get(forecastUrl);\n      const weatherDescription = response.data.properties.periods[0].detailedForecast;\n      setWeather(weatherDescription);\n    } catch (error) {\n      console.error(`Error fetching forecast data: ${error}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: cityName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"Uu01XFF+yFcReezpN1K+y4zqFmw=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Weather","_ref","_s","latitude","longitude","cityName","setCityName","weather","setWeather","fetchWeatherData","apiUrl","response","get","catch","error","console","log","data","status","headers","city","properties","relativeLocation","forecast","fetchForecastData","forecastUrl","weatherDescription","periods","detailedForecast","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/maxsteel/Developer/weather-app/src/Weather.js"],"sourcesContent":["\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Weather = ({latitude,longitude}) => {\n  const [cityName, setCityName] = useState('');\n  const [weather, setWeather] = useState('');\n  // const [latitude ] = useState(latitude);\n  // const [longitude] = useState(longitude);\n  useEffect(() => {\n    fetchWeatherData(latitude, longitude);\n  }, [latitude,longitude]);\n\n  const fetchWeatherData = async (latitude, longitude) => {\n    try {\n      const apiUrl = `https://api.weather.gov/points/${latitude},${longitude}`;\n      const response = await axios.get(apiUrl).catch(function (error) {\n        if (error.response) {\n          console.log('invalid Input');\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        };\n      });\n      const city = response.data.properties.relativeLocation.properties.city;\n      const forecast = response.data.properties.forecast;\n      setCityName(city);\n      fetchForecastData(forecast);\n    } catch (error) {\n      console.error(`Error fetching weather data: ${error}`);\n    }\n  };\n\n  const fetchForecastData = async (forecastUrl) => {\n    try {\n      const response = await axios.get(forecastUrl);\n      const weatherDescription = response.data.properties.periods[0].detailedForecast;\n      setWeather(weatherDescription);\n    } catch (error) {\n      console.error(`Error fetching forecast data: ${error}`);\n    }\n  };\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n  \n     \n        <div>\n          <h1>{cityName}</h1>\n          <p>{weather }</p>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Weather;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}