{"ast":null,"code":"var _jsxFileName = \"/home/maxsteel/Developer/weather-app/src/Forecast.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Forecast = () => {\n  _s();\n  const [forecastData, setForecastData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [latitude, setLatitude] = useState('41.881832');\n  const [longitude, setLongitude] = useState('-87.623177');\n  useEffect(() => {\n    fetchForecastGridData();\n  }, []);\n  const fetchForecastGridData = async () => {\n    try {\n      const apiUrl = `https://api.weather.gov/points/${latitude},${longitude}`;\n      const response = await axios.get(apiUrl);\n      const forecastGridDataUrl = response.data.properties.forecastGridData;\n      const forecastGridResponse = await axios.get(forecastGridDataUrl);\n      const forecastGrid = forecastGridResponse.data.properties;\n      setForecastData(forecastGrid);\n      setLoading(false);\n    } catch (error) {\n      console.error(`Error fetching forecast grid data: ${error}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: forecastData.map(forecast => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.startTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.endTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.weatherSummary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.temperature.high\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.temperature.low\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, forecast.startTime, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Forecast, \"NvM6eA0BqHzo75jWeNI79hVaW/w=\");\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["logo","React","useEffect","useState","axios","jsxDEV","_jsxDEV","Forecast","_s","forecastData","setForecastData","loading","setLoading","latitude","setLatitude","longitude","setLongitude","fetchForecastGridData","apiUrl","response","get","forecastGridDataUrl","data","properties","forecastGridData","forecastGridResponse","forecastGrid","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","forecast","startTime","endTime","weatherSummary","temperature","high","low","_c","$RefreshReg$"],"sources":["/home/maxsteel/Developer/weather-app/src/Forecast.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nconst Forecast = () => {\n  const [forecastData, setForecastData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [latitude, setLatitude] = useState('41.881832');\n  const [longitude, setLongitude] = useState('-87.623177');\n  useEffect(() => {\n    fetchForecastGridData();\n  }, []);\n\n  const fetchForecastGridData = async () => {\n    try {\n  \n\n      const apiUrl = `https://api.weather.gov/points/${latitude},${longitude}`;\n      const response = await axios.get(apiUrl);\n      const forecastGridDataUrl = response.data.properties.forecastGridData;\n      const forecastGridResponse = await axios.get(forecastGridDataUrl);\n      const forecastGrid = forecastGridResponse.data.properties;\n\n      setForecastData(forecastGrid);\n      setLoading(false);\n    } catch (error) {\n      console.error(`Error fetching forecast grid data: ${error}`);\n    }\n  };\n  return (\n    <div>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <table>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Time</th>\n              <th>Conditions</th>\n              <th>High</th>\n              <th>Low</th>\n            </tr>\n          </thead>\n          <tbody>\n            {forecastData.map((forecast) => (\n              <tr key={forecast.startTime}>\n                <td>{forecast.startTime}</td>\n                <td>{forecast.endTime}</td>\n                <td>{forecast.weatherSummary}</td>\n                <td>{forecast.temperature.high}</td>\n                <td>{forecast.temperature.low}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default Forecast;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,WAAW,CAAC;EACrD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,YAAY,CAAC;EACxDD,SAAS,CAAC,MAAM;IACde,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MAGF,MAAMC,MAAM,GAAI,kCAAiCL,QAAS,IAAGE,SAAU,EAAC;MACxE,MAAMI,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAACF,MAAM,CAAC;MACxC,MAAMG,mBAAmB,GAAGF,QAAQ,CAACG,IAAI,CAACC,UAAU,CAACC,gBAAgB;MACrE,MAAMC,oBAAoB,GAAG,MAAMrB,KAAK,CAACgB,GAAG,CAACC,mBAAmB,CAAC;MACjE,MAAMK,YAAY,GAAGD,oBAAoB,CAACH,IAAI,CAACC,UAAU;MAEzDb,eAAe,CAACgB,YAAY,CAAC;MAC7Bd,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAE,sCAAqCA,KAAM,EAAC,CAAC;IAC9D;EACF,CAAC;EACD,oBACErB,OAAA;IAAAuB,QAAA,EACGlB,OAAO,gBACNL,OAAA;MAAAuB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjB3B,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QAAAuB,QAAA,eACEvB,OAAA;UAAAuB,QAAA,gBACEvB,OAAA;YAAAuB,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACb3B,OAAA;YAAAuB,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACb3B,OAAA;YAAAuB,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnB3B,OAAA;YAAAuB,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACb3B,OAAA;YAAAuB,QAAA,EAAI;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR3B,OAAA;QAAAuB,QAAA,EACGpB,YAAY,CAACyB,GAAG,CAAEC,QAAQ,iBACzB7B,OAAA;UAAAuB,QAAA,gBACEvB,OAAA;YAAAuB,QAAA,EAAKM,QAAQ,CAACC;UAAS;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7B3B,OAAA;YAAAuB,QAAA,EAAKM,QAAQ,CAACE;UAAO;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3B3B,OAAA;YAAAuB,QAAA,EAAKM,QAAQ,CAACG;UAAc;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClC3B,OAAA;YAAAuB,QAAA,EAAKM,QAAQ,CAACI,WAAW,CAACC;UAAI;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpC3B,OAAA;YAAAuB,QAAA,EAAKM,QAAQ,CAACI,WAAW,CAACE;UAAG;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAL5BE,QAAQ,CAACC,SAAS;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMvB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzB,EAAA,CAvDID,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAyDd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}